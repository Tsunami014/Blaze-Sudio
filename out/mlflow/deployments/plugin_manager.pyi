import abc
from _typeshed import Incomplete
from mlflow.deployments.base import BaseDeploymentClient as BaseDeploymentClient
from mlflow.deployments.utils import parse_target_uri as parse_target_uri
from mlflow.exceptions import MlflowException as MlflowException
from mlflow.protos.databricks_pb2 import INTERNAL_ERROR as INTERNAL_ERROR, RESOURCE_DOES_NOT_EXIST as RESOURCE_DOES_NOT_EXIST

class PluginManager(abc.ABC, metaclass=abc.ABCMeta):
    group_name: Incomplete
    @abc.abstractmethod
    def __init__(self, group_name): ...
    @abc.abstractmethod
    def __getitem__(self, item): ...
    @property
    def registry(self): ...
    @property
    def has_registered(self): ...
    def register(self, target_name, plugin_module) -> None: ...
    def register_entrypoints(self) -> None: ...

class DeploymentPlugins(PluginManager):
    def __init__(self) -> None: ...
    def __getitem__(self, item): ...
