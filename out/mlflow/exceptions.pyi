from _typeshed import Incomplete
from mlflow.protos.databricks_pb2 import BAD_REQUEST as BAD_REQUEST, CUSTOMER_UNAUTHORIZED as CUSTOMER_UNAUTHORIZED, ENDPOINT_NOT_FOUND as ENDPOINT_NOT_FOUND, ErrorCode as ErrorCode, INTERNAL_ERROR as INTERNAL_ERROR, INVALID_PARAMETER_VALUE as INVALID_PARAMETER_VALUE, INVALID_STATE as INVALID_STATE, PERMISSION_DENIED as PERMISSION_DENIED, REQUEST_LIMIT_EXCEEDED as REQUEST_LIMIT_EXCEEDED, RESOURCE_ALREADY_EXISTS as RESOURCE_ALREADY_EXISTS, RESOURCE_DOES_NOT_EXIST as RESOURCE_DOES_NOT_EXIST, TEMPORARILY_UNAVAILABLE as TEMPORARILY_UNAVAILABLE

ERROR_CODE_TO_HTTP_STATUS: Incomplete
HTTP_STATUS_TO_ERROR_CODE: Incomplete

def get_error_code(http_status): ...

class MlflowException(Exception):
    error_code: Incomplete
    message: Incomplete
    json_kwargs: Incomplete
    def __init__(self, message, error_code=..., **kwargs) -> None: ...
    def serialize_as_json(self): ...
    def get_http_status_code(self): ...
    @classmethod
    def invalid_parameter_value(cls, message, **kwargs): ...

class RestException(MlflowException):
    json: Incomplete
    def __init__(self, json) -> None: ...

class ExecutionException(MlflowException): ...
class MissingConfigException(MlflowException): ...
