from _typeshed import Incomplete
from mlflow.exceptions import MlflowException as MlflowException
from mlflow.tracking._model_registry import DEFAULT_AWAIT_MAX_SLEEP_SECONDS as DEFAULT_AWAIT_MAX_SLEEP_SECONDS
from mlflow.utils.databricks_utils import get_databricks_runtime as get_databricks_runtime
from mlflow.utils.file_utils import TempDir as TempDir
from typing import Any, Callable

MLMODEL_FILE_NAME: str

class ModelInfo:
    def __init__(self, artifact_path: str, flavors: dict[str, Any], model_uri: str, model_uuid: str, run_id: str, saved_input_example_info: dict[str, Any] | None, signature, utc_time_created: str, mlflow_version: str, signature_dict: dict[str, Any] | None = None) -> None: ...
    @property
    def artifact_path(self): ...
    @property
    def flavors(self): ...
    @property
    def model_uri(self): ...
    @property
    def model_uuid(self): ...
    @property
    def run_id(self): ...
    @property
    def saved_input_example_info(self): ...
    @property
    def signature_dict(self): ...
    @property
    def signature(self): ...
    @property
    def utc_time_created(self): ...
    @property
    def mlflow_version(self): ...

class Model:
    run_id: Incomplete
    artifact_path: Incomplete
    utc_time_created: Incomplete
    flavors: Incomplete
    model_uuid: Incomplete
    mlflow_version: Incomplete
    def __init__(self, artifact_path: Incomplete | None = None, run_id: Incomplete | None = None, utc_time_created: Incomplete | None = None, flavors: Incomplete | None = None, signature: Incomplete | None = None, saved_input_example_info: dict[str, Any] = None, model_uuid: str | Callable | None = ..., mlflow_version: str | None = ..., **kwargs) -> None: ...
    def __eq__(self, other): ...
    def get_input_schema(self): ...
    def get_output_schema(self): ...
    def load_input_example(self, path: str): ...
    def add_flavor(self, name, **params): ...
    @property
    def signature(self): ...
    @signature.setter
    def signature(self, value) -> None: ...
    @property
    def saved_input_example_info(self) -> dict[str, Any] | None: ...
    @saved_input_example_info.setter
    def saved_input_example_info(self, value: dict[str, Any]): ...
    def get_model_info(self): ...
    def to_dict(self): ...
    def to_yaml(self, stream: Incomplete | None = None): ...
    def to_json(self): ...
    def save(self, path) -> None: ...
    @classmethod
    def load(cls, path): ...
    @classmethod
    def from_dict(cls, model_dict): ...
    @classmethod
    def log(cls, artifact_path, flavor, registered_model_name: Incomplete | None = None, await_registration_for=..., **kwargs): ...

def get_model_info(model_uri: str) -> ModelInfo: ...
