from _typeshed import Incomplete
from mlflow.models import FlavorBackend as FlavorBackend
from mlflow.utils.string_utils import quote as quote

class RFuncBackend(FlavorBackend):
    def build_image(self, model_uri, image_name, install_mlflow, mlflow_home, enable_mlserver) -> None: ...
    def generate_dockerfile(self, model_uri, output_path, install_mlflow, mlflow_home, enable_mlserver) -> None: ...
    version_pattern: Incomplete
    def predict(self, model_uri, input_path, output_path, content_type, json_format) -> None: ...
    def serve(self, model_uri, port, host, timeout, enable_mlserver, synchronous: bool = True, stdout: Incomplete | None = None, stderr: Incomplete | None = None) -> None: ...
    def can_score_model(self): ...
