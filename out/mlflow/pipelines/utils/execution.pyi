from _typeshed import Incomplete
from mlflow.pipelines.step import BaseStep as BaseStep, StepStatus as StepStatus
from mlflow.utils.file_utils import read_yaml as read_yaml, write_yaml as write_yaml

def run_pipeline_step(pipeline_root_path: str, pipeline_steps: list[BaseStep], target_step: BaseStep, template: str) -> BaseStep: ...
def clean_execution_state(pipeline_root_path: str, pipeline_steps: list[BaseStep]) -> None: ...
def get_step_output_path(pipeline_root_path: str, step_name: str, relative_path: str) -> str: ...
def get_or_create_base_execution_directory(pipeline_root_path: str) -> str: ...

class _ExecutionPlan:
    steps_cached: Incomplete
    def __init__(self, rule_name, output_lines_of_make: list[str], pipeline_step_names: list[str]) -> None: ...
    def print(self) -> None: ...

class _MakefilePathFormat:
    pipeline_root_path: Incomplete
    execution_directory_path: Incomplete
    def __init__(self, pipeline_root_path: str, execution_directory_path: str) -> None: ...
    def __format__(self, path_spec: str) -> str: ...
