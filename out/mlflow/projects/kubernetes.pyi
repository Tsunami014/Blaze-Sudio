from _typeshed import Incomplete
from mlflow.entities import RunStatus as RunStatus
from mlflow.exceptions import ExecutionException as ExecutionException
from mlflow.projects.submitted_run import SubmittedRun as SubmittedRun

def push_image_to_registry(image_tag): ...
def run_kubernetes_job(project_name, active_run, image_tag, image_digest, command, env_vars, kube_context: Incomplete | None = None, job_template: Incomplete | None = None): ...

class KubernetesSubmittedRun(SubmittedRun):
    POLL_STATUS_INTERVAL: int
    def __init__(self, mlflow_run_id, job_name, job_namespace) -> None: ...
    @property
    def run_id(self): ...
    def wait(self): ...
    def get_status(self): ...
    def cancel(self) -> None: ...
