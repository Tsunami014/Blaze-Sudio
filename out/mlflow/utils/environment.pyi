from _typeshed import Incomplete
from mlflow.exceptions import MlflowException as MlflowException
from mlflow.protos.databricks_pb2 import INVALID_PARAMETER_VALUE as INVALID_PARAMETER_VALUE
from mlflow.utils import PYTHON_VERSION as PYTHON_VERSION
from mlflow.version import VERSION as VERSION

class _PythonEnv:
    BUILD_PACKAGES: Incomplete
    python: Incomplete
    build_dependencies: Incomplete
    dependencies: Incomplete
    def __init__(self, python: Incomplete | None = None, build_dependencies: Incomplete | None = None, dependencies: Incomplete | None = None) -> None: ...
    @classmethod
    def current(cls): ...
    @staticmethod
    def get_current_build_dependencies(): ...
    def to_dict(self): ...
    @classmethod
    def from_dict(cls, dct): ...
    def to_yaml(self, path) -> None: ...
    @classmethod
    def from_yaml(cls, path): ...
    @staticmethod
    def get_dependencies_from_conda_yaml(path): ...
    @classmethod
    def from_conda_yaml(cls, path): ...

def infer_pip_requirements(model_uri, flavor, fallback: Incomplete | None = None): ...
