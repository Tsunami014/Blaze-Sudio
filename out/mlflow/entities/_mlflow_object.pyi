import abc
from _typeshed import Incomplete
from abc import abstractmethod

class _MLflowObject(metaclass=abc.ABCMeta):
    def __iter__(self): ...
    @classmethod
    @abstractmethod
    def from_proto(cls, proto): ...
    @classmethod
    def from_dictionary(cls, the_dict): ...

def to_string(obj): ...
def get_classname(obj): ...

class _MLflowObjectPrinter:
    printer: Incomplete
    def __init__(self) -> None: ...
    def to_string(self, obj): ...
