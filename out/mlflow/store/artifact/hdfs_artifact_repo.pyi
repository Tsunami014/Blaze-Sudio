from _typeshed import Incomplete
from collections.abc import Generator
from mlflow.entities import FileInfo as FileInfo
from mlflow.environment_variables import MLFLOW_KERBEROS_TICKET_CACHE as MLFLOW_KERBEROS_TICKET_CACHE, MLFLOW_KERBEROS_USER as MLFLOW_KERBEROS_USER, MLFLOW_PYARROW_EXTRA_CONF as MLFLOW_PYARROW_EXTRA_CONF
from mlflow.exceptions import MlflowException as MlflowException
from mlflow.store.artifact.artifact_repo import ArtifactRepository as ArtifactRepository
from mlflow.utils.file_utils import mkdir as mkdir, relative_path_to_artifact_path as relative_path_to_artifact_path

class HdfsArtifactRepository(ArtifactRepository):
    def __init__(self, artifact_uri) -> None: ...
    def log_artifact(self, local_file, artifact_path: Incomplete | None = None) -> None: ...
    def log_artifacts(self, local_dir, artifact_path: Incomplete | None = None) -> None: ...
    def list_artifacts(self, path: Incomplete | None = None): ...
    def download_artifacts(self, artifact_path, dst_path: Incomplete | None = None): ...
    def delete_artifacts(self, artifact_path: Incomplete | None = None) -> None: ...

def hdfs_system(scheme, host, port) -> Generator[Incomplete, None, None]: ...
