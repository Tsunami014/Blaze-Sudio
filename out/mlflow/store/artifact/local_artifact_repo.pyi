from _typeshed import Incomplete
from mlflow.store.artifact.artifact_repo import ArtifactRepository as ArtifactRepository, verify_artifact_path as verify_artifact_path
from mlflow.utils.file_utils import get_file_info as get_file_info, list_all as list_all, local_file_uri_to_path as local_file_uri_to_path, mkdir as mkdir, relative_path_to_artifact_path as relative_path_to_artifact_path

class LocalArtifactRepository(ArtifactRepository):
    def __init__(self, *args, **kwargs) -> None: ...
    @property
    def artifact_dir(self): ...
    def log_artifact(self, local_file, artifact_path: Incomplete | None = None) -> None: ...
    def log_artifacts(self, local_dir, artifact_path: Incomplete | None = None) -> None: ...
    def download_artifacts(self, artifact_path, dst_path: Incomplete | None = None): ...
    def list_artifacts(self, path: Incomplete | None = None): ...
    def delete_artifacts(self, artifact_path: Incomplete | None = None) -> None: ...
