from _typeshed import Incomplete
from mlflow.entities.model_registry import ModelVersion as ModelVersion, RegisteredModel as RegisteredModel
from mlflow.protos.model_registry_pb2 import CreateModelVersion as CreateModelVersion, CreateRegisteredModel as CreateRegisteredModel, DeleteModelVersion as DeleteModelVersion, DeleteModelVersionTag as DeleteModelVersionTag, DeleteRegisteredModel as DeleteRegisteredModel, DeleteRegisteredModelTag as DeleteRegisteredModelTag, GetLatestVersions as GetLatestVersions, GetModelVersion as GetModelVersion, GetModelVersionDownloadUri as GetModelVersionDownloadUri, GetRegisteredModel as GetRegisteredModel, ListRegisteredModels as ListRegisteredModels, ModelRegistryService as ModelRegistryService, RenameRegisteredModel as RenameRegisteredModel, SearchModelVersions as SearchModelVersions, SearchRegisteredModels as SearchRegisteredModels, SetModelVersionTag as SetModelVersionTag, SetRegisteredModelTag as SetRegisteredModelTag, TransitionModelVersionStage as TransitionModelVersionStage, UpdateModelVersion as UpdateModelVersion, UpdateRegisteredModel as UpdateRegisteredModel
from mlflow.store.entities.paged_list import PagedList as PagedList
from mlflow.store.model_registry.abstract_store import AbstractStore as AbstractStore
from mlflow.utils.proto_json_utils import message_to_json as message_to_json
from mlflow.utils.rest_utils import call_endpoint as call_endpoint, call_endpoints as call_endpoints, extract_all_api_info_for_service as extract_all_api_info_for_service, extract_api_info_for_service as extract_api_info_for_service

class RestStore(AbstractStore):
    get_host_creds: Incomplete
    def __init__(self, get_host_creds) -> None: ...
    def create_registered_model(self, name, tags: Incomplete | None = None, description: Incomplete | None = None): ...
    def update_registered_model(self, name, description): ...
    def rename_registered_model(self, name, new_name): ...
    def delete_registered_model(self, name) -> None: ...
    def list_registered_models(self, max_results, page_token): ...
    def search_registered_models(self, filter_string: Incomplete | None = None, max_results: Incomplete | None = None, order_by: Incomplete | None = None, page_token: Incomplete | None = None): ...
    def get_registered_model(self, name): ...
    def get_latest_versions(self, name, stages: Incomplete | None = None): ...
    def set_registered_model_tag(self, name, tag) -> None: ...
    def delete_registered_model_tag(self, name, key) -> None: ...
    def create_model_version(self, name, source, run_id: Incomplete | None = None, tags: Incomplete | None = None, run_link: Incomplete | None = None, description: Incomplete | None = None): ...
    def transition_model_version_stage(self, name, version, stage, archive_existing_versions): ...
    def update_model_version(self, name, version, description): ...
    def delete_model_version(self, name, version) -> None: ...
    def get_model_version(self, name, version): ...
    def get_model_version_download_uri(self, name, version): ...
    def search_model_versions(self, filter_string): ...
    def set_model_version_tag(self, name, version, tag) -> None: ...
    def delete_model_version_tag(self, name, version, key) -> None: ...
