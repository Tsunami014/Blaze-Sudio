from _typeshed import Incomplete
from mlflow.utils.autologging_utils import ExceptionSafeClass as ExceptionSafeClass, get_autologging_config as get_autologging_config
from mxnet.gluon.contrib.estimator import EpochEnd, TrainBegin, TrainEnd

class __MLflowGluonCallback(EpochEnd, TrainEnd, TrainBegin, metaclass=ExceptionSafeClass):
    log_models: Incomplete
    current_epoch: int
    def __init__(self, log_models, metrics_logger) -> None: ...
    def epoch_end(self, estimator, *args, **kwargs) -> None: ...
    def train_begin(self, estimator, *args, **kwargs) -> None: ...
    def train_end(self, estimator, *args, **kwargs) -> None: ...
